- name: Generate Gateway CA key if not exists
  when: "'gateway' in group_names"
  run_once: true
  community.crypto.openssh_keypair:
    path: "{{ ca_key_path }}"
    type: rsa
    size: 4096
    state: present
    regenerate: never

- name: Fetch file from gateway
  when: "'gateway' in group_names"
  ansible.builtin.fetch:
    src: "{{ item }}"
    dest: ./files/
    flat: true
  loop:
    - "{{ ca_key_path }}"
    - "{{ ca_key_path }}.pub"

- name: Distribute CA public key to all servers
  when: "'gateway' not in group_names"
  ansible.builtin.copy:
    src: "./files/{{ ca_key_path | basename }}.pub"
    dest: "{{ ca_key_path }}.pub"
    owner: root
    group: root
    mode: '0644'

- name: Generate user ssh key pairs
  when: "'gateway' in group_names"
  community.crypto.openssh_keypair:
    path: "{{ users_certificates_path }}/{{ item.username }}/id_rsa"
    type: rsa
    size: 4096
    state: present
    regenerate: never
    mode: '0604'
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
  loop: "{{ ssh_users }}"

- name: Sign user public keys with CA
  when: "'gateway' in group_names"
  community.crypto.openssh_cert:
    type: user
    path: "{{ users_certificates_path }}/{{ item.username }}/id_rsa.cert"
    public_key: "{{ users_certificates_path }}/{{ item.username }}/id_rsa.pub"
    signing_key: "{{ ca_key_path }}"
    valid_from: always
    valid_to: "+{{ cert_validity_week }}w"
    principals:
      - "{{ item.username }}"
      - "{{ item.groups }}"
    identifier: "{{ item.username }}"
    state: present
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
  loop: "{{ ssh_users }}"

- name: Generate SSH config for users
  when: "'gateway' in group_names"
  ansible.builtin.template:
    src: ssh_config.j2
    dest: "{{ users_certificates_path }}/{{ item.username }}/config"
    mode: '0644'
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
  loop: "{{ ssh_users }}"
